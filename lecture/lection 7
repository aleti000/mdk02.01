# Лекция 7: Разметка жесткого диска

## Цели и задачи
- Изучить основные принципы работы с жесткими дисками в Linux.
- Разобраться с процессом разметки дисков (создание разделов).
- Научиться форматировать разделы под различные файловые системы.
- Понять принципы монтирования и управления разделами.
- Подготовить студентов к самостоятельной работе с дисками.

---

## Основной материал

### 1. Введение в работу с дисками

#### Что такое жесткий диск?
Жесткий диск — это устройство для хранения данных. В Linux диски представлены как файлы устройств в каталоге `/dev`. Например:
- `/dev/sda` — первый физический диск.
- `/dev/sdb` — второй физический диск.

#### Типы разделов:

1. **Основной раздел (Primary)**:
   - Основной раздел используется для установки операционной системы или хранения данных.
   - На одном физическом диске может быть создано не более **4 основных разделов**.
   - Основные разделы независимы друг от друга и могут быть загрузочными (например, для установки GRUB).

2. **Расширенный раздел (Extended)**:
   - Расширенный раздел — это специальный тип раздела, который позволяет создавать дополнительные логические разделы.
   - Он сам по себе не может хранить данные, а служит контейнером для логических разделов.
   - Может существовать только один расширенный раздел на диске.

3. **Логический раздел (Logical)**:
   - Логические разделы создаются внутри расширенного раздела.
   - Используются для увеличения количества разделов на диске сверх лимита в 4 основных раздела.
   - Логические разделы не могут быть загрузочными.

#### Принцип работы таблицы разделов:
- **MBR (Master Boot Record)**:
  - Старый стандарт разметки дисков.
  - Поддерживает до 4 основных разделов или 3 основных + 1 расширенный раздел.
  - Максимальный размер диска — 2 ТБ.
- **GPT (GUID Partition Table)**:
  - Современный стандарт разметки дисков.
  - Поддерживает неограниченное количество разделов (обычно до 128).
  - Максимальный размер диска — более 9 ЗБ (зеттабайт).

---

### 2. Утилиты для разметки дисков

#### fdisk
Утилита `fdisk` используется для создания и управления разделами на дисках.

##### Принцип работы:
1. Запустите утилиту:
   fdisk /dev/sdX
2. Добавьте новый раздел:
   - Нажмите `n` для создания нового раздела.
   - Выберите тип раздела (основной или логический).
   - Укажите размер раздела.
3. Сохраните изменения:
   - Нажмите `w`, чтобы записать изменения на диск.

#### parted
Утилита `parted` используется для работы с дисками, поддерживающими GPT (GUID Partition Table).

##### Принцип работы:
1. Запустите утилиту:
   parted /dev/sdX
2. Создайте новый раздел:
   mkpart primary ext4 0GB 10GB
   - `primary`: Тип раздела.
   - `ext4`: Файловая система.
   - `0GB 10GB`: Начало и конец раздела.
3. Проверьте таблицу разделов:
   print

---

### 3. Форматирование разделов

#### Что такое файловая система?
Файловая система — это способ организации, хранения и управления данными на диске. Она определяет, как файлы и каталоги структурируются, именуются и доступны для операционной системы.

#### Виды файловых систем:
1. **ext4**:
   - Самая популярная файловая система в Linux.
   - Поддерживает большие объемы данных (до 1 ЭБ).
   - Хорошо оптимизирована для производительности и надежности.
2. **XFS**:
   - Высокопроизводительная файловая система.
   - Идеально подходит для работы с большими файлами (например, базы данных).
3. **Btrfs**:
   - Современная файловая система с поддержкой снимков (snapshots) и встроенным RAID.
   - Все еще находится в стадии активного развития.
4. **FAT32**:
   - Устаревшая файловая система, совместимая с большинством операционных систем.
   - Ограничение: максимальный размер файла — 4 ГБ.
5. **NTFS**:
   - Файловая система Windows.
   - Поддерживается в Linux через модуль NTFS-3G.

#### mkfs
Утилита `mkfs` используется для создания файловых систем на разделах.

##### Принцип работы:
1. Создайте файловую систему ext4:
   mkfs.ext4 /dev/sdX1
2. Создайте файловую систему XFS:
   mkfs.xfs /dev/sdX1
3. Создайте файловую систему FAT32:
   mkfs.vfat /dev/sdX1

---

### 4. Монтирование разделов

#### Что такое монтирование?
Монтирование — это процесс подключения раздела или устройства к файловой системе Linux. После монтирования раздел становится доступным для чтения и записи.

#### mount
Утилита `mount` используется для монтирования разделов.

##### Принцип работы:
1. Создайте точку монтирования:
   mkdir /mnt/data
2. Смонтируйте раздел:
   mount /dev/sdX1 /mnt/data
3. Проверьте монтирование:
   df -h

##### Принцип монтирования:
- При монтировании операционная система связывает устройство (например, `/dev/sdX1`) с каталогом (точкой монтирования, например, `/mnt/data`).
- После монтирования все данные, записанные в `/mnt/data`, будут сохраняться на устройстве `/dev/sdX1`.

#### Автоматическое монтирование
Для автоматического монтирования разделов при загрузке системы добавьте запись в файл `/etc/fstab`.

##### Пример записи:
/dev/sdX1 /mnt/data ext4 defaults 0 0
- `/dev/sdX1`: Устройство.
- `/mnt/data`: Точка монтирования.
- `ext4`: Тип файловой системы.
- `defaults`: Параметры монтирования.
- `0`: Резервное копирование (0 — отключено).
- `0`: Порядок проверки файловой системы (0 — не проверять).

---

### 5. Управление пространством

#### df
Утилита `df` используется для просмотра использования дискового пространства.

##### Пример:
df -h
- `-h`: Человекочитаемый формат (например, GB, MB).

#### du
Утилита `du` используется для просмотра размера файлов и каталогов.

##### Пример:
du -sh /path/to/directory
- `-s`: Показать общий размер.
- `-h`: Человекочитаемый формат.

---

## Домашнее задание
1. Изучите команду `fdisk` и попробуйте создать новый раздел на виртуальном диске.
2. Отформатируйте раздел под файловую систему ext4.
3. Смонтируйте раздел и добавьте запись в `/etc/fstab` для автоматического монтирования.
4. Проверьте использование дискового пространства с помощью команды `df`.

---

## Вопросы для самопроверки
1. Какие типы разделов существуют? В чем их отличия?
2. Для чего используются утилиты `fdisk` и `parted`?
3. Что такое файловая система? Какие виды файловых систем вы знаете?
4. Как смонтировать раздел в Linux? Для чего используется файл `/etc/fstab`?
5. Как проверить использование дискового пространства?
